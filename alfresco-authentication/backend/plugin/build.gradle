/*
 * Copyright 2015-2022 Ritense BV, the Netherlands.
 *
 * Licensed under EUPL, Version 1.2 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://joinup.ec.europa.eu/collection/eupl/eupl-text-eupl-12
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
}

plugins {
    id "idea"
    id "java-library"

    id "org.springframework.boot" version "${springVersion}"
    id "io.spring.dependency-management" version "${springDependencyManagementVersion}"

    id "org.jetbrains.kotlin.jvm" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.spring" version "${kotlinVersion}"
    id "org.jetbrains.kotlin.plugin.allopen" version "${kotlinVersion}"
    id "com.avast.gradle.docker-compose" version "0.16.9"
}

java {
    withSourcesJar()
}

version="${pluginVersion}"

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repository.jboss.org/nexus/content/repositories/releases" }
    maven { url "https://oss.sonatype.org/content/repositories/releases" }
    maven { url "https://s01.oss.sonatype.org/content/groups/staging/"}
    maven { url "https://s01.oss.sonatype.org/content/repositories/snapshots/"}
}

dependencyManagement {
    imports {
        mavenBom "com.fasterxml.jackson:jackson-bom:2.17.2"
    }
}

configurations.all {
    // These dependencies are required by valtimo:core, but are lacking a version number, causing errors.
    // Because this dependency isn't used, we chose to exclude it.
    // (If removing these exclusions doesn't cause errors, feel free to remove it.)
    exclude group: 'io.dropwizard.metrics', module: 'metrics-core'
    exclude group: 'io.dropwizard.metrics', module: 'metrics-annotation'
}

dependencies {
    implementation "com.ritense.valtimo:contract:${valtimoVersion}"
    implementation "com.ritense.valtimo:core:${valtimoVersion}"
    implementation "com.ritense.valtimo:plugin-valtimo:${valtimoVersion}"
    implementation ("com.ritense.valtimo:documenten-api:${valtimoVersion}") {
        exclude group: 'com.ritense.valtimo', module: 'catalogi-api'
    }


    implementation "org.springframework.boot:spring-boot-starter-webflux:${springVersion}"

    implementation "io.github.microutils:kotlin-logging:3.0.5"
    implementation "com.fasterxml.jackson.core:jackson-databind:2.14.2"
    implementation "com.fasterxml.jackson.core:jackson-annotations:2.14.2"
    implementation "com.fasterxml.jackson.core:jackson-core:2.14.2"

    // Testing
    testImplementation "com.fasterxml.jackson.core:jackson-databind:2.14.2"
    testImplementation "com.fasterxml.jackson.core:jackson-annotations:2.14.2"
    testImplementation "com.fasterxml.jackson.core:jackson-core:2.14.2"
    testImplementation "org.junit.jupiter:junit-jupiter-migrationsupport:5.9.1"
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.hamcrest:hamcrest-library"
    testImplementation "com.jayway.jsonpath:json-path:2.7.0"
    testImplementation "org.mockito.kotlin:mockito-kotlin:4.1.0"


    testImplementation "com.squareup.okhttp3:mockwebserver:4.10.0"
    testImplementation "com.squareup.okhttp3:okhttp:4.10.0"

    testImplementation "org.jetbrains.kotlin:kotlin-test"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit5"
}

tasks.register("integrationTesting", Test) {
    group = "verification"
    useJUnitPlatform {
        includeTags "integration"
    }
    mustRunAfter check
}

dockerCompose {
    projectName = "slack"
    isRequiredBy(integrationTesting)
    useComposeFiles.addAll("docker-compose-integration-test.yml")
}

test {
    useJUnitPlatform()
}

sourceCompatibility = 17
targetCompatibility = 17

task wrapper(type: Wrapper){
    gradleVersion = '7.5'
}

task prepareKotlinBuildScriptModel {

}

apply plugin: "com.avast.gradle.docker-compose"

apply from: "gradle/publishing.gradle"
